{
    "1":{
        "title":"JavaScript Introduction",
        "info":"JavaScript is the world's most popular programming language. JavaScript is the programming language of the Web. JavaScript is easy to learn. JavaScript is used to program the behavior of web pages",
        "example":"<h2>My First JavaScript</h2><br><button type=\"button\"onclick=\"document.getElementById('demo').innerHTML = Date()\">Display Date and Time.</button><br><br><p id=\"demo\"></p> ",
        "codeExample":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h2&gt;My First JavaScript&lt;/h2&gt;<br><br>&lt;button type=\"button\"onclick=\"document.getElementById('demo').innerHTML = Date()\"&gt;<br>Display Date and Time.&lt;/button&gt;<br><br>&lt;p id=\"demo\"&gt;&lt;/p&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;",
        "codeExpln":null
    },
    "2":{
        "title":"JavaScript Syntax",
        "info":"JavaScript syntax is the set of rules, how JavaScript programs are constructed.<br>The JavaScript syntax defines two types of values:<br><li>Fixed values<br><li>Variable values<br><br>Fixed values are called <b>Literals</b>.<br>Variable values are called <b>Variables</b>.<br><br>In a programming language, variables are used to store data values. JavaScript uses the var keyword to declare variables. An equal sign is used to assign values to variables.<br><br><pre>        var x = 4072;</pre>",
        "example":"<!DOCTYPE html><html><body><h2>JavaScript Variables</h2><p>In this example, x is defined as a variable.Then, x is assigned the value of 6:</p><p id=\"demo\"></p><button onclick=\"check()\">Check Value of x!</button><p id=\"demo\"></p></body></html>",
        "codeExample":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h2&gt;JavaScript Variables&lt;/h2&gt;<br><br>&lt;p&gt;In this example, x is defined as a variable.<br>Then, x is assigned the value of 6:&lt;/p&gt;<br><br>&lt;p id=\"demo\"&gt;&lt;/p&gt;<br>&lt;script&gt;<br>var x;<br>x = 6;<br>document.getElementById(\"demo\").innerHTML = x;<br>&lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;",
        "codeExpln":null
    },
    "3":{
        "title":"JavaScript Comments",
        "info":"JavaScript comments can be used to explain JavaScript code, and to make it more readable. JavaScript comments can also be used to prevent execution, when testing alternative code. Single line comments start with //. Any text between // and the end of the line will be ignored by JavaScript (will not be executed). Multi-line comments start with /* and end with */. Any text between /* and */ will be ignored by JavaScript.",
        "example":"<!DOCTYPE html><html><body><h1 id=\"myH\">JavaScript Comments</h1><p id=\"myP\">My first paragragh.</p></body></html>",
        "codeExample":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h1 id=\"myH\"&gt;&lt;/h1&gt;<br>&lt;p id=\"myP\"&gt;&lt;/p&gt;<br><br>&lt;script&gt;<br>/*<br>The code below will change<br>the heading with id = \"myH\"<br>and the paragraph with id = \"myP\"<br>*/<br>document.getElementById(\"myH\").innerHTML = \"JavaScript Comments\";<br>document.getElementById(\"myP\").innerHTML = \"My first paragraph.\";<br>&lt;/script&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;",
        "codeExpln":null
    },
    "4":{
        "title":"JavaScript Variables",
        "info":"JavaScript variables are containers for storing data values.<br>Before 2015, using the var keyword was the only way to declare a JavaScript variable. The 2015 version of JavaScript (ES6 - ECMAScript 2015) allows the use of the const keyword to define a variable that cannot be reassigned, and the let keyword to define a variable with restricted scope. Because it is a little complicated to describe the difference between these keywords, and because they are not supported in older browsers, the first part of this tutorial will most often use var.<br><br>All JavaScript variables must be identified with unique names. These unique names are called identifiers. Identifiers can be short names (like x and y) or more descriptive names (age, sum, totalVolume). The general rules for constructing names for variables (unique identifiers) are: <br><br><li>Names can contain letters, digits, underscores, and dollar signs.<br><li>Names must begin with a letter<br><li>Names can also begin with $ and _ <br><li>Names are case sensitive (y and Y are different variables)<br><li>Reserved words (like JavaScript keywords) cannot be used as names",
        "example":"<!DOCTYPE html><html><body><h2>JavaScript Variables</h2><p>You can declare many variables in one statement.</p><p id=\"demo\">Volvo</p></body></html>",
        "codeExample":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h2&gt;JavaScript Variables&lt;/h2&gt;<br><br>&lt;p&gt;You can declare many variables in one statement.&lt;/p&gt;<br><br>&lt;p id=\"demo\"&gt;&lt;/p&gt;<br><br>&lt;script&gt;<br>var person = \"Ganesh Dhavan\",<br>carName = \"Volvo\",<br>price = 200;<br>document.getElementById(\"demo\").innerHTML = carName;<br>&lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;",
        "codeExpln":"JavaScript identifiers are case-sensitive."
    },
    "5":{
        "title":"JavaScript Data Types",
        "info":"In programming, data types is an important concept. To be able to operate on variables, it is important to know something about the type.<br><br>There are seven data types in JavaScript:<br><br><li>String<br><li>Number<br><li>Boolean<br><li>Array<br><li>Object<br><li>Undefined<br><li>Null",
        "example":"<!DOCTYPE html><html><body><h2>JavaScript typeof</h2><br><p>The typeof operator returns the type of a variable or an expression.</p><br><p id=\"demo\">string<br>number<br>boolean<br>boolean<br>undefined<br>object<br>object<br>object<br>function</p></body></html>",
        "codeExample":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h2&gt;JavaScript typeof&lt;/h2&gt;<br>&lt;p&gt;The typeof operator returns the type of a variable or an expression.&lt;/p&gt;<br><br>&lt;p id=\"demo\"&gt;&lt;/p&gt;<br><br>&lt;script&gt;<br>document.getElementById(\"demo\").innerHTML = <br>typeof \"Ganesh\" + \"&lt;br&gt;\" + <br>typeof 3.14 + \"&lt;br&gt;\" +<br>typeof true + \"&lt;br&gt;\" +<br>typeof false + \"&lt;br&gt;\" +<br>typeof x + \"&lt;br&gt;\" +<br>typeof {name:'Ganesh', age:34} + \"&lt;br&gt;\" +<br>typeof [1,2,3,4] + \"&lt;br&gt;\" +<br>typeof null + \"&lt;br&gt;\" +<br>typeof function myFunc(){};<br>&lt;/script&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;",
        "codeExpln":"The typeof operator can be used to identify the type of the identifier. The typeof operator can return one of these primitive types: boolean, string, number, undefined, function and object. The typeof operator returns \"object\" for objects, arrays, and null."
    },
    "6":{
        "title":"JavaScript Functions",
        "info":"A JavaScript function is a block of code designed to perform a particular task. A JavaScript function is executed when \"something\" invokes it (calls it).<br><br>A JavaScript function is defined with the function keyword, followed by a name, followed by parentheses (). Function names can contain letters, digits, underscores, and dollar signs (same rules as variables). The parentheses may include parameter names separated by commas:(parameter1, parameter2, ...). The code to be executed, by the function, is placed inside curly brackets: {}",
        "example":"<!DOCTYPE html><html><body><h2>JavaScript Functions</h2><p id=\"demo\">The temperature is 25 Celsius</p></body></html>",
        "codeExample":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h2&gt;JavaScript Functions&lt;/h2&gt;<br><br>&lt;p id=\"demo\"&gt;&lt;/p&gt;<br><br>&lt;script&gt;<br>document.getElementById(\"demo\").innerHTML =<br> \"The temperature is \" + toCelsius(77) + \" Celsius\";<br><br>function toCelsius(fahrenheit) {<br>return (5/9) * (fahrenheit-32);<br>} <br>&lt;/script&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;",
        "codeExpln":"When JavaScript reaches a return statement, the function will stop executing. Functions often compute a return value. The return value is \"returned\" back to the \"caller\"."
    },
    "7":{
        "title":"JavaScript String Methods",
        "info":"<br><li>The .length property returns the length of a string<br><li>The .indexOf() method returns the index of (the position of) the first occurrence of a specified text in a string<br><li>The .lastIndexOf() method returns the index of the last occurrence of a specified text in a string<br><li>The .search() method searches a string for a specified value and returns the position of the match<br><li>The .slice() extracts a part of a string and returns the extracted part in a new string.<br><li>substring() is similar to slice(). The difference is that substring() cannot accept negative indexes.<br><li>substr() is similar to slice(). The difference is that the second parameter specifies the length of the extracted part.<br><li>The replace() method replaces a specified value with another value in a string.<br><li>A string is converted to upper case with toUpperCase()<br><li>A string is converted to lower case with toLowerCase()<br><li>concat() joins two or more strings<br><li>The trim() method removes whitespace from both sides of a string<br><li>A string can be converted to an array with the split() method.",
        "example":"<!DOCTYPE html><html><body><h2>JavaScript String Properties</h2><p id=\"demo\">String:<br>16<br>4<br>HIJKLM<br>DCBAEFGHIJKLMNOPQRSTUVWXYZ<br>dcbaefghijklmnopqrstuvwxyz<br>DCBAEFGHIJKLMNOPQRSTUVWXYZ</p></body></html>",
        "codeExample":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h2&gt;JavaScript String Properties&lt;/h2&gt;<br><br>&lt;p id=\"demo\"&gt;&lt;/p&gt;<br><br>&lt;script&gt;<br>var str = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";<br>var sln = str.length;<br>var pos = str.indexOf(\"EFG\");<br>var res = str.slice(7,13);<br>var txt = str.replace(\"ABCD\",\"DCBA\");<br>var text1 = str.toLowerCase();<br>var text2 = text1.toUpperCase();<br>document.getElementById(\"demo\").innerHTML = <br>\"String:\" + str + \"&lt;br&gt;\" +<br>sln+ \"&lt;br&gt;\" +<br>pos+ \"&lt;br&gt;\" +<br>res+ \"&lt;br&gt;\" +<br>txt+ \"&lt;br&gt;\" +<br>text1+ \"&lt;br&gt;\" +<br>text2+ \"&lt;br&gt;\" +;<br>&lt;/script&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;",
        "codeExpln":null
    },
    "8":{
        "title":"JavaScript Arrays",
        "info":"An array is a special variable, which can hold more than one value at a time. Using an array literal is the easiest way to create a JavaScript Array.<br><br>Syntax:<br><br>var array_name = [item1, item2, ...];",
        "example":"[\"Ganesh\", \"Dhavan\", 46]",
        "codeExample":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h2&gt;JavaScript Arrays&lt;/h2&gt;<br><br>&lt;p&gt;Arrays use numbers to access its elements.&lt;/p&gt;<br><br>&lt;p id=\"demo\"&gt;&lt;/p&gt;<br><br>&lt;script&gt;<br>var person = [\"Ganesh\", \"Dhavan\", 46];<br>document.getElementById(\"demo\").innerHTML = person;<br>&lt;/script&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;",
        "codeExpln":null
    },
    "9":{
        "title":"JavaScript Dates",
        "info":"JavaScript Date Object lets us work with dates. By default, JavaScript will use the browser's time zone and display a date as a full text string. Date objects are created with the new Date() constructor. new Date() creates a new date object with the current date and time.",
        "example":"<!DOCTYPE html><html><body><h2>JavaScript new Date()</h2><p>Using new Date(), creates a new date object with the current date and time:</p><p id=\"demo\"></p><button onclick=\"checkDate()\"> Show Date</button></body></html>",
        "codeExample":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h2&gt;JavaScript new Date()&lt;/h2&gt;<br><br>&lt;p&gt;Using new Date(), creates a new date object with the current date and time:&lt;/p&gt;<br><br>&lt;p id=\"demo\"&gt;&lt;/p&gt;<br><br>&lt;button onclick=\"checkDate()\"&gt; Show Date&lt;/button&gt;<br><br>&lt;script&gt;<br>function checkDate(){<br>var d = new Date();<br>document.getElementById(\"demo\").innerHTML = d;<br>}<br>&lt;/script&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;",
        "codeExpln":null
    },
    "10":{
        "title":"JavaScript Math",
        "info":"The JavaScript Math object allows you to perform mathematical tasks on numbers.<br><br><li>Math.PI returns the value of pi upto 15 decimal point.<br><li>Math.round(x) returns the value of x rounded to its nearest integer.<br><li>Math.pow(x, y) returns the value of x to the power of y.<br><li>Math.sqrt(x) returns the square root of x.<br><li>Math.abs(x) returns the absolute (positive) value of x.<br><li>Math.ceil(x) returns the value of x rounded up to its nearest integer.<br><li>Math.floor(x) returns the value of x rounded down to its nearest integer.<br><li>Math.random() returns a random number between 0 (inclusive), and 1 (exclusive)",
        "example":"<!DOCTYPE html><html><body><h2>JavaScript Math.PI</h2><p>Math.PI returns the ratio of a circle's circumference to its diameter:</p><p id=\"pi\"></p><p>Math.round(x) returns the value of x rounded to its nearest integer:</p><p id=\"round\"></p><p>Math.pow(x,y) returns the value of x to the power of y:</p><p id=\"pow\"></p><p>Math.sqrt(x) returns the square root of x:</p><p id=\"sqrt\"></p><p>Math.abs(x) returns the absolute (positive) value of x:</p><p id=\"abs\"></p><p>Math.ceil() rounds a number <strong>up</strong> to its nearest integer:</p><p id=\"ceil\"></p><p>Math.floor(x) returns the value of x rounded <strong>down</strong> to its nearest integer:</p><p id=\"floor\"></p><p>Math.random() returns a random number between 0 and 1:</p><p id=\"random\"></p><button onclick=\"math()\">Calculate</button><script>function math(){document.getElementById(\"pi\").innerHTML = Math.PI;document.getElementById(\"round\").innerHTML = Math.round(4.4);document.getElementById(\"pow\").innerHTML = Math.pow(8,2);document.getElementById(\"sqrt\").innerHTML = Math.sqrt(64);document.getElementById(\"abs\").innerHTML = Math.abs(-4.4);document.getElementById(\"ceil\").innerHTML = Math.ceil(4.4);document.getElementById(\"floor\").innerHTML = Math.floor(4.7);document.getElementById(\"random\").innerHTML = Math.random();}</script></body></html>",
        "codeExample":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h2&gt;JavaScript Math.PI&lt;/h2&gt;<br><br>&lt;p&gt;Math.PI returns the ratio of a circle's circumference to its diameter:&lt;/p&gt;<br>&lt;p id=\"pi\"&gt;&lt;/p&gt;<br><br>&lt;p&gt;Math.round(x) returns the value of x rounded to its nearest integer:&lt;/p&gt;<br>&lt;p id=\"round\"&gt;&lt;/p&gt;<br><br>&lt;p&gt;Math.pow(x,y) returns the value of x to the power of y:&lt;/p&gt;<br>&lt;p id=\"pow\"&gt;&lt;/p&gt;<br><br>&lt;p&gt;Math.sqrt(x) returns the square root of x:&lt;/p&gt;<br>&lt;p id=\"sqrt\"&gt;&lt;/p&gt;<br><br>&lt;p&gt;Math.abs(x) returns the absolute (positive) value of x:&lt;/p&gt;<br>&lt;p id=\"abs\"&gt;&lt;/p&gt;<br><br>&lt;p&gt;Math.ceil() rounds a number &lt;strong&gt;up&lt;/strong&gt; to its nearest integer:&lt;/p&gt;<br>&lt;p id=\"ceil\"&gt;&lt;/p&gt;<br><br>&lt;p&gt;Math.floor(x) returns the value of x rounded &lt;strong&gt;down&lt;/strong&gt; to its nearest integer:&lt;/p&gt;<br>&lt;p id=\"floor\"&gt;&lt;/p&gt;<br><br>&lt;p&gt;Math.random() returns a random number between 0 and 1:&lt;/p&gt;<br>&lt;p id=\"random\"&gt;&lt;/p&gt;<br><br>&lt;button onclick=\"math()\"&gt;Calculate&lt;/button&gt;<br><br>&lt;script&gt;<br>function math(){<br>document.getElementById(\"pi\").innerHTML = Math.PI;<br>document.getElementById(\"round\").innerHTML = Math.round(4.4);<br>document.getElementById(\"pow\").innerHTML = Math.pow(8,2);<br>document.getElementById(\"sqrt\").innerHTML = Math.sqrt(64);<br>document.getElementById(\"abs\").innerHTML = Math.abs(-4.4);<br>document.getElementById(\"ceil\").innerHTML = Math.ceil(4.4);<br>document.getElementById(\"floor\").innerHTML = Math.floor(4.7);<br>document.getElementById(\"random\").innerHTML = Math.random();<br>}<br>&lt;/script&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;",
        "codeExpln":null
    },
    "11":{
        "title":"JavaScript Objects",
        "info":"You have already learned that JavaScript variables are containers for data values. Objects are variables too. But objects can contain many values.<br><br>For example, <br><br>In real life, a car is an object.<br>A car has properties like weight and color, and methods like start and stop.<br>All cars have the same properties, but the property values differ from car to car.<br>All cars have the same methods, but the methods are performed at different times.",
        "example":"<h2>JavaScript Objects</h2><br><br><p>An object method is a function definition, stored as a property value.</p><br><br><p id=\"demo\">Ganesh Dhavan</p>",
        "codeExample":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h2&gt;JavaScript Objects&lt;/h2&gt;<br><br>&lt;p&gt;An object method is a function definition, stored as a property value.&lt;/p&gt;<br><br>&lt;p id=\"demo\"&gt;&lt;/p&gt;<br><br>&lt;script&gt;<br>// Create an object:<br>var person = {<br>firstName: \"Ganesh\",<br>lastName : \"Dhavan\",<br>id     : 5566,<br>fullName : function() {<br>return this.firstName + \" \" + this.lastName;<br>}<br>};<br>// Display data from the object:<br>document.getElementById(\"demo\").innerHTML = person.fullName();<br>&lt;/script&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;",
        "codeExpln":"If you access a method without the () parentheses, it will return the <b>function definition</b>."
    },
    "12":{
        "title":"JavaScript Classes",
        "info":"Use the keyword class to create a class. Always add a method named constructor(). A JavaScript class is not an object. It is a template for JavaScript objects.",
        "example":"<h2>JavaScript Class Method</h2><br><p>Pass a parameter into the \"age()\" method.</p><br><p id=\"demo\">My car is 6 years old.</p>",
        "codeExample":"&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h2&gt;JavaScript Class Method&lt;/h2&gt;<br><br>&lt;p&gt;Pass a parameter into the \"age()\" method.&lt;/p&gt;<br><br>&lt;p id=\"demo\"&gt;&lt;/p&gt;<br><br>&lt;script&gt;<br>class Car {<br>constructor(name, year) {<br>this.name = name;<br>this.year = year;<br>}<br>age(x) {<br>return x - this.year;<br>}<br>}<br><br>let date = new Date();<br>let year = date.getFullYear();<br><br>let myCar = new Car(\"Ford\", 2014);<br>document.getElementById(\"demo\").innerHTML=<br>\"My car is \" + myCar.age(year) + \" years old.\";<br>&lt;/script&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;",
        "codeExpln":null
    }
}